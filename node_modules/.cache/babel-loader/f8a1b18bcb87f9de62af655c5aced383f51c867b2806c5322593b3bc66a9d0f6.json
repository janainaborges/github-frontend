{"ast":null,"code":"var _jsxFileName = \"/Users/janaina/Documents/CODE/HI\\u0301BRIDO/fullstack/github-api-proxy-frontend/src/components/RepoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GitHubService from '../api/GitHubService';\nimport '../styles/RepoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RepoList = ({\n  username\n}) => {\n  _s();\n  const [repos, setRepos] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchRepos = async () => {\n      try {\n        const userRepos = await GitHubService.getUserRepos(username);\n        setRepos(userRepos);\n      } catch (err) {\n        setError('Failed to fetch user repositories');\n        console.error(err);\n      }\n    };\n    fetchRepos();\n  }, [username]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"repo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Repositories for \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: repos.map(repo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"repo-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: repo.html_url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"repo-link\",\n          children: repo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), repo.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"repo-description\",\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 34\n        }, this), repo.language && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"repo-language\",\n          children: [\"Language: \", repo.language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"repo-stars\",\n          children: [\"Stars: \", repo.stargazers_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"repo-created-at\",\n          children: [\"Created at: \", new Date(repo.created_at).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, repo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(RepoList, \"aVhHIc1/y+ZG6J6hUwx/kABspHU=\");\n_c = RepoList;\nexport default RepoList;\nvar _c;\n$RefreshReg$(_c, \"RepoList\");","map":{"version":3,"names":["React","useState","useEffect","GitHubService","jsxDEV","_jsxDEV","RepoList","username","_s","repos","setRepos","error","setError","fetchRepos","userRepos","getUserRepos","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","repo","href","html_url","target","rel","name","description","language","stargazers_count","Date","created_at","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["/Users/janaina/Documents/CODE/HÍBRIDO/fullstack/github-api-proxy-frontend/src/components/RepoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GitHubService from '../api/GitHubService';\nimport '../styles/RepoList.css';\n\nconst RepoList = ({ username }) => {\n  const [repos, setRepos] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchRepos = async () => {\n      try {\n        const userRepos = await GitHubService.getUserRepos(username);\n        setRepos(userRepos);\n      } catch (err) {\n        setError('Failed to fetch user repositories');\n        console.error(err);\n      }\n    };\n\n    fetchRepos();\n  }, [username]);\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  return (\n    <div className=\"repo-list\">\n      <h2>Repositories for {username}</h2>\n      <ul>\n        {repos.map((repo) => (\n          <li key={repo.id} className=\"repo-item\">\n            <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"repo-link\">\n              {repo.name}\n            </a>\n            {repo.description && <p className=\"repo-description\">{repo.description}</p>}\n            {repo.language && <p className=\"repo-language\">Language: {repo.language}</p>}\n            <p className=\"repo-stars\">Stars: {repo.stargazers_count}</p>\n            <p className=\"repo-created-at\">Created at: {new Date(repo.created_at).toLocaleDateString()}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default RepoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}