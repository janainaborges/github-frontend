{"ast":null,"code":"var _jsxFileName = \"/Users/janaina/Documents/CODE/HI\\u0301BRIDO/fullstack/github-api-proxy-frontend/src/components/UserList.js\",\n  _s = $RefreshSig$();\n// src/components/UserList.js\nimport React, { useState, useEffect } from 'react';\nimport GitHubService from '../api/GitHubService';\nimport Pagination from './Pagination'; // Assume this is your pagination component\nimport '../styles/UserList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = ({\n  onSelectUser\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        // Modify this to use your pagination logic (e.g., passing currentPage to the API)\n        const {\n          data,\n          pageCount\n        } = await GitHubService.getUsers(currentPage);\n        setUsers(data);\n        setTotalPages(pageCount);\n      } catch (err) {\n        setError('Failed to fetch users');\n        console.error(err);\n      }\n    };\n    fetchUsers();\n  }, [currentPage]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GitHub Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-item\",\n      onClick: () => onSelectUser(user.login),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", user.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Login: \", user.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"dd2balS7/F4Um2ylO25MN2ME848=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","GitHubService","Pagination","jsxDEV","_jsxDEV","UserList","onSelectUser","_s","users","setUsers","error","setError","currentPage","setCurrentPage","totalPages","setTotalPages","fetchUsers","data","pageCount","getUsers","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","login","id","onPageChange","_c","$RefreshReg$"],"sources":["/Users/janaina/Documents/CODE/HÍBRIDO/fullstack/github-api-proxy-frontend/src/components/UserList.js"],"sourcesContent":["// src/components/UserList.js\nimport React, { useState, useEffect } from 'react';\nimport GitHubService from '../api/GitHubService';\nimport Pagination from './Pagination'; // Assume this is your pagination component\nimport '../styles/UserList.css';\n\nconst UserList = ({ onSelectUser }) => {\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        // Modify this to use your pagination logic (e.g., passing currentPage to the API)\n        const { data, pageCount } = await GitHubService.getUsers(currentPage);\n        setUsers(data);\n        setTotalPages(pageCount);\n      } catch (err) {\n        setError('Failed to fetch users');\n        console.error(err);\n      }\n    };\n\n    fetchUsers();\n  }, [currentPage]);\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  return (\n    <div className=\"user-list\">\n      <h1>GitHub Users</h1>\n      {users.map(user => (\n        <div key={user.id} className=\"user-item\" onClick={() => onSelectUser(user.login)}>\n          <p>ID: {user.id}</p>\n          <p>Login: {user.login}</p>\n        </div>\n      ))}\n      <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={setCurrentPage} />\n    </div>\n  );\n};\n\nexport default UserList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;AACvC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF;QACA,MAAM;UAAEC,IAAI;UAAEC;QAAU,CAAC,GAAG,MAAMjB,aAAa,CAACkB,QAAQ,CAACP,WAAW,CAAC;QACrEH,QAAQ,CAACQ,IAAI,CAAC;QACdF,aAAa,CAACG,SAAS,CAAC;MAC1B,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZT,QAAQ,CAAC,uBAAuB,CAAC;QACjCU,OAAO,CAACX,KAAK,CAACU,GAAG,CAAC;MACpB;IACF,CAAC;IAEDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEjB,IAAIF,KAAK,EAAE;IACT,oBAAON,OAAA;MAAKkB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEb;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7C;EAEA,oBACEvB,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA;MAAAmB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBnB,KAAK,CAACoB,GAAG,CAACC,IAAI,iBACbzB,OAAA;MAAmBkB,SAAS,EAAC,WAAW;MAACQ,OAAO,EAAEA,CAAA,KAAMxB,YAAY,CAACuB,IAAI,CAACE,KAAK,CAAE;MAAAR,QAAA,gBAC/EnB,OAAA;QAAAmB,QAAA,GAAG,MAAI,EAACM,IAAI,CAACG,EAAE;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBvB,OAAA;QAAAmB,QAAA,GAAG,SAAO,EAACM,IAAI,CAACE,KAAK;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFlBE,IAAI,CAACG,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACN,CAAC,eACFvB,OAAA,CAACF,UAAU;MAACU,WAAW,EAAEA,WAAY;MAACE,UAAU,EAAEA,UAAW;MAACmB,YAAY,EAAEpB;IAAe;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3F,CAAC;AAEV,CAAC;AAACpB,EAAA,CAtCIF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}